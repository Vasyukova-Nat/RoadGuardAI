import { useState, ChangeEvent } from 'react';
import {
  Box,
  Paper,
  Typography,
  Button,
  TextField,
  Select,
  MenuItem,
  FormControl,
  InputLabel,
  Alert,
  SelectChangeEvent
} from '@mui/material';
import CloudUploadIcon from '@mui/icons-material/CloudUpload';
import { ProblemType } from '../../types';

const ProblemForm: React.FC = () => {
  const [photo, setPhoto] = useState<string | null>(null);
  const [problemType, setProblemType] = useState<ProblemType>('pothole');
  const [address, setAddress] = useState<string>('');
  const [submitted, setSubmitted] = useState<boolean>(false);

  const handlePhotoUpload = (event: ChangeEvent<HTMLInputElement>): void => {
    const file = event.target.files?.[0];
    if (file) {
      setPhoto(URL.createObjectURL(file));
    }
  };

  const handleProblemTypeChange = (event: SelectChangeEvent): void => {
    setProblemType(event.target.value as ProblemType);
  };

  const handleAddressChange = (event: ChangeEvent<HTMLInputElement>): void => {
    setAddress(event.target.value);
  };

  const handleSubmit = (): void => {
    setSubmitted(true);
    setTimeout(() => {
      setSubmitted(false);
      setPhoto(null);
      setProblemType('pothole');
      setAddress('');
    }, 3000);
  };

  return (
    <Box sx={{ p: 3, maxWidth: 600, margin: '0 auto' }}>
      {submitted && (
        <Alert severity="success" sx={{ mb: 2 }}>
          –ü—Ä–æ–±–ª–µ–º–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é!
        </Alert>
      )}
      
      <Paper elevation={3} sx={{ p: 3 }}>
        <Typography variant="h5" gutterBottom>
          –°–æ–æ–±—â–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ 
        </Typography>

        <Box sx={{ mb: 2 }}>
          <input
            accept="image/*"
            style={{ display: 'none' }}
            id="photo-upload"
            type="file"
            onChange={handlePhotoUpload}
          />
          <label htmlFor="photo-upload">
            <Button
              variant="outlined"
              component="span"
              startIcon={<CloudUploadIcon />}
              fullWidth
            >
              –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ –¥–æ—Ä–æ–≥–∏
            </Button>
          </label>
          {photo && (
            <Box sx={{ mt: 2 }}>
              <img 
                src={photo} 
                alt="Preview" 
                style={{ 
                  maxWidth: '100%', 
                  maxHeight: 300,
                  borderRadius: '8px'
                }} 
              />
            </Box>
          )}
        </Box>

        <FormControl fullWidth sx={{ mb: 2 }}>
          <InputLabel>–¢–∏–ø –ø—Ä–æ–±–ª–µ–º—ã</InputLabel>
          <Select
            value={problemType}
            label="–¢–∏–ø –ø—Ä–æ–±–ª–µ–º—ã"
            onChange={handleProblemTypeChange}
          >
            <MenuItem value="pothole">üöß –Ø–º–∞</MenuItem>
            <MenuItem value="crack">üìè –¢—Ä–µ—â–∏–Ω–∞</MenuItem>
            <MenuItem value="manhole">‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ª—é–∫</MenuItem>
            <MenuItem value="other">‚ùì –î—Ä—É–≥–æ–µ</MenuItem>
          </Select>
        </FormControl>

        <TextField
          fullWidth
          label="–ê–¥—Ä–µ—Å –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –º–µ—Å—Ç–∞"
          value={address}
          onChange={handleAddressChange}
          sx={{ mb: 2 }}
          placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: —É–ª. –õ–µ–Ω–∏–Ω–∞, 15, –ø–µ—Ä–µ–¥ –ø–µ—à–µ—Ö–æ–¥–Ω—ã–º –ø–µ—Ä–µ—Ö–æ–¥–æ–º"
        />

        <Button
          variant="contained"
          onClick={handleSubmit}
          disabled={!photo || !address}
          fullWidth
          size="large"
        >
          –û—Ç–ø—Ä–∞–≤–∏—Ç—å
        </Button>
      </Paper>
    </Box>
  );
}

export default ProblemForm;